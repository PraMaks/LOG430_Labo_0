services:
  mongo-auth:
    image: mongo:5.0
    container_name: mongo_auth_db
    ports:
      - "27018:27017" # port different pour docker-compose
    restart: always

  mongo-stocks:
    image: mongo:5.0
    container_name: mongo_stocks_db
    ports:
      - "27118:27017" # port different pour docker-compose
    restart: always

  mongo-sales:
    image: mongo:5.0
    container_name: mongo_sales_db
    ports:
      - "27218:27017" # port different pour docker-compose
    restart: always

  mongo-supplies:
    image: mongo:5.0
    container_name: mongo_supplies_db
    ports:
      - "27318:27017" # port different pour docker-compose
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis_server
    ports:
      - "6379:6379"
    restart: always

  auth:
    build: 
      context: ./src/backend/services/auth
      dockerfile: Dockerfile-Auth
    container_name: auth-service
    depends_on:
      - mongo-auth
    environment:
      - MONGO_HOST=mongo-auth
      - MONGO_PORT=27017
    ports:
      - "3010:3010"
    command: node app.js 

  stocks:
    build: 
      context: ./src/backend/services/stocks
      dockerfile: Dockerfile-Stocks
    container_name: stocks-service
    depends_on:
      - mongo-stocks
    environment:
      - MONGO_HOST=mongo-stocks
      - MONGO_PORT=27017
    ports:
      - "3020:3020"
    command: node app.js

  sales:
    build: 
      context: ./src/backend/services/sales
      dockerfile: Dockerfile-Sales
    container_name: sales-service
    depends_on:
      - mongo-sales
    environment:
      - MONGO_HOST=mongo-sales
      - MONGO_PORT=27017
    ports:
      - "3030:3030"
    command: node app.js

  supplies:
    build: 
      context: ./src/backend/services/supplies
      dockerfile: Dockerfile-Supplies
    container_name: supplies-service
    depends_on:
      - mongo-supplies
    environment:
      - MONGO_HOST=mongo-supplies
      - MONGO_PORT=27017
    ports:
      - "3040:3040"
    command: node app.js

  krakend:
    image: devopsfaith/krakend:2.6
    container_name: krakend-gateway
    ports:
      - "80:80"
    volumes:
      - ./krakend:/etc/krakend
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - auth
      - stocks
      - sales
      - supplies
